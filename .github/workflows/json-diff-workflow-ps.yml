name: Process File Changes with PowerShell

on:
  workflow_call:
    inputs:
      file_paths:
        required: true
        type: string

jobs:
  process-changes:
    runs-on: windows-latest  # Windows required for PowerShell

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch entire history to allow proper comparisons

      # Step 2: Prepare JSON Files (_old.json and _new.json)
      - name: Prepare JSON Files
        shell: bash
        run: |
          echo "Input file paths: ${{ inputs.file_paths }}"
          file_paths=$(echo '${{ inputs.file_paths }}' | jq -r '.[]')
          for file in $file_paths; do
            echo "Processing file: $file"

            # Check if the file is newly added
            is_added=$(git diff-tree --no-commit-id --name-only --diff-filter=A -r HEAD -- "$file" | wc -l)

            if [ "$is_added" -eq 1 ]; then
              echo "File $file is newly added."
              echo "{}" > "${file}_old.json"
              git show HEAD:"$file" > "${file}_new.json"
            else
              last_commit_hash=$(git log -2 --pretty=format:"%H" -- "$file" | tail -n 1)
              echo "Last commit hash for $file: $last_commit_hash"

              if [ -z "$last_commit_hash" ]; then
                echo "{}" > "${file}_old.json"
              else
                git show ${last_commit_hash}:"$file" > "${file}_old.json"
              fi
              git show HEAD:"$file" > "${file}_new.json"
            fi

            echo "Content of old JSON:"
            cat "${file}_old.json"
            echo "Content of new JSON:"
            cat "${file}_new.json"
          done

      # Step 3: Process JSON Diff with PowerShell
      - name: Process JSON Diff with PowerShell
        shell: pwsh
        run: |
          $files = Get-ChildItem -Path "." -Filter "*_old.json" | ForEach-Object {
              $_.FullName -replace "_old.json", ""
          }

          foreach ($file in $files) {
              $oldFile = "${file}_old.json"
              $newFile = "${file}_new.json"
              $outputFile = "${file}_diff.json"

              if (!(Test-Path $oldFile)) {
                  Write-Error "Missing old JSON file: $oldFile"
                  exit 1
              }
              if (!(Test-Path $newFile)) {
                  Write-Error "Missing new JSON file: $newFile"
                  exit 1
              }

              # Load JSON files
              $json1 = Get-Content -Path $oldFile -Raw | ConvertFrom-Json
              $json2 = Get-Content -Path $newFile -Raw | ConvertFrom-Json

              # Initialize an array to store the differences
              $diffResults = @()

              # Ensure the files have the same number of entries
              if ($json1.Count -ne $json2.Count) {
                  Write-Host "Error: Input files do not have the same number of entries."
                  exit 1
              }

              # Compare objects
              for ($i = 0; $i -lt $json1.Count; $i++) {
                  $item1 = $json1[$i]
                  $item2 = $json2[$i]

                  # Initialize a counter for changes
                  $changeCount = 0

                  # Prepare a diff entry
                  $diffEntry = [PSCustomObject]@{
                      ApplicationName               = $item1.ApplicationName
                      RoleGroupName                 = $item1.RoleGroupName
                      RoleGroupOwners               = $item1.RoleGroupOwners
                      TechnicalGroups               = $item1.TechnicalGroups
                      NestRoleGroupInTechnicalGroups = $item1.NestRoleGroupInTechnicalGroups
                      AccessReviewEnabled           = $item1.AccessReviewEnabled
                  }

                  # Compare RoleGroupOwners
                  $newRoleGroupOwners = Compare-Object -ReferenceObject $item1.RoleGroupOwners -DifferenceObject $item2.RoleGroupOwners -PassThru
                  if ($newRoleGroupOwners.Count -gt 0) {
                      Write-Host "Detected changes in RoleGroupOwners for $($item1.ApplicationName): $($newRoleGroupOwners -join ', ')"
                      $diffEntry.RoleGroupOwners = $newRoleGroupOwners
                      $changeCount++
                  }

                  # Compare TechnicalGroups
                  $newTechnicalGroups = Compare-Object -ReferenceObject $item1.TechnicalGroups -DifferenceObject $item2.TechnicalGroups -PassThru
                  if ($newTechnicalGroups.Count -gt 0) {
                      Write-Host "Detected changes in TechnicalGroups for $($item1.ApplicationName): $($newTechnicalGroups -join ', ')"
                      $diffEntry.TechnicalGroups = $newTechnicalGroups
                      $changeCount++
                  }

                  # Compare other fields
                  if ($item1.NestRoleGroupInTechnicalGroups -ne $item2.NestRoleGroupInTechnicalGroups) {
                      $diffEntry.NestRoleGroupInTechnicalGroups = $item2.NestRoleGroupInTechnicalGroups
                      $changeCount++
                  }
                  if ($item1.AccessReviewEnabled -ne $item2.AccessReviewEnabled) {
                      $diffEntry.AccessReviewEnabled = $item2.AccessReviewEnabled
                      $changeCount++
                  }

                  # Decide what to include in the output
                  if ($changeCount -gt 1) {
                      Write-Host "Multiple changes detected for $($item2.ApplicationName). Adding full block."
                      $diffResults += $item2
                  } elseif ($changeCount -eq 1) {
                      Write-Host "Single change detected for $($item2.ApplicationName). Adding diff entry."
                      $diffResults += $diffEntry
                  } else {
                      Write-Host "No changes detected for $($item2.ApplicationName)."
                  }
              }

              # Convert to JSON and save to file
              if ($diffResults.Count -eq 0) {
                  Write-Host "No differences detected between $oldFile and $newFile."
              } else {
                  $diffResults | ConvertTo-Json -Depth 10 | Set-Content -Path $outputFile
                  Write-Host "Diff saved to $outputFile"
              }
          }

      # Step 4: Upload JSON Diff Files
      - name: Upload JSON Diff Files
        uses: actions/upload-artifact@v4
        with:
          name: json-diff-files
          path: '**/*_diff.json'
